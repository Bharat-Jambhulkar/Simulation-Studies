which(idxmat[,1]) = 0
which(idxmat[,1]== 0)
length(idxmat[,1])
which(idxmat[,1]== 1)
length(which(idxmat[,1]== 1))
70/392
for(i in 1:ncol(Odata)){
w = which(idxmat[,i]== 1)
Odata[w,i] = NA
}
head(Odata)
prop = sample(pr,size = ncol(Odata)-1,replace=T)
prop
idxmat = matrix(nrow=nrow(Odata),ncol=ncol(Odata)-1)
for(i in 1:ncol(idxmat)){
idxmat[,i] = rbinom(n=nrow(idxmat),size=1,prob=prop[i])
}
head(idxmat)
for(i in 1:ncol(Odata)-1){
w = which(idxmat[,i]== 1)
Odata[w,i] = NA
}
Odata = Auto
set.seed(23325)
pr = seq(0.1,0.25,by=0.01)
prop = sample(pr,size = ncol(Odata)-1,replace=T)
idxmat = matrix(nrow=nrow(Odata),ncol=ncol(Odata)-1)
for(i in 1:ncol(idxmat)){
idxmat[,i] = rbinom(n=nrow(idxmat),size=1,prob=prop[i])
}
head(idxmat)
for(i in 1:(ncol(Odata)-1)){
w = which(idxmat[,i]== 1)
Odata[w,i] = NA
}
head(Odata)
Odata = Auto
sapply(Odata,class)
Odata$cylinders = as.factor(Odata$cylinders)
Odata$origin = as.factor(Odata$origin)
sapply(Odata,class)
set.seed(23325)
pr = seq(0.1,0.25,by=0.01)
prop = sample(pr,size = ncol(Odata)-1,replace=T)
idxmat = matrix(nrow=nrow(Odata),ncol=ncol(Odata)-1)
for(i in 1:ncol(idxmat)){
idxmat[,i] = rbinom(n=nrow(idxmat),size=1,prob=prop[i])
}
head(idxmat)
for(i in 1:(ncol(Odata)-1)){
w = which(idxmat[,i]== 1)
Odata[w,i] = NA
}
Odata
head(Odata)
##Steps
"
1. Take a dataset with continuous, categorical, and count features.
2. For each column take some missing value percentage.
3. For each column generate a Bernoulli random number and for which index
Bernoulli is equal 1 put NA at that place.
"
library(ISLR)
Odata = Auto
head(Odata)
sapply(Odata,class)
Odata$cylinders = as.factor(Odata$cylinders)
Odata$origin = as.factor(Odata$origin)
sapply(Odata,class)
set.seed(23325)
pr = seq(0.1,0.25,by=0.01)
prop = sample(pr,size = ncol(Odata)-1,replace=T)
idxmat = matrix(nrow=nrow(Odata),ncol=ncol(Odata)-1)
for(i in 1:ncol(idxmat)){
idxmat[,i] = rbinom(n=nrow(idxmat),size=1,prob=prop[i])
}
head(idxmat)
for(i in 1:(ncol(Odata)-1)){
w = which(idxmat[,i]== 1)
Odata[w,i] = NA
}
head(Odata)
is.na.data.frame(Odata)
sum(is.na.data.frame(Odata))
(colMeans(is.na(Odata)))*100
round((colMeans(is.na(Odata)))*100,4)
prop
sapply(Odata,class)
table(Auto$origin)
median(Auto$origin)
mode(Auto$origin)
head(Auto)
for(i in 1:ncol(Odata)){
c = class(Odata[,i])
if(c == "numeric"){
Odata[is.na(Odata[,i]),i] = mean(Odata[,i],na.rm = T)
}else
if(c == "factor"){
Odata[is.na(Odata[,i]),i] = median(Odata[,i],na.rm = T)
}
}
View(Auto)
Odata = Auto
sapply(Odata,class)
set.seed(23325)
pr = seq(0.1,0.25,by=0.01)
prop = sample(pr,size = ncol(Odata)-1,replace=T)
idxmat = matrix(nrow=nrow(Odata),ncol=ncol(Odata)-1)
for(i in 1:ncol(idxmat)){
idxmat[,i] = rbinom(n=nrow(idxmat),size=1,prob=prop[i])
}
head(idxmat)
for(i in 1:(ncol(Odata)-1)){
w = which(idxmat[,i]== 1)
Odata[w,i] = NA
}
head(Odata)
## Got the missing data
## Missing Percentage
round((colMeans(is.na(Odata)))*100,4)
sapply(Odata,class)
median(Odata$origin,na.rm=T)
Odata$origin = as.integer(Odata$origin)
median(Odata$origin,na.rm=T)
Odata$origin = as.factor(Odata$origin)
median(Odata$origin,na.rm=T)
library(ISLR)
Odata = Auto
head(Odata)
sapply(Odata,class)
Odata$cylinders = as.integer(Odata$cylinders)
Odata$origin = as.integer(Odata$origin)
sapply(Odata,class)
set.seed(23325)
pr = seq(0.1,0.25,by=0.01)
prop = sample(pr,size = ncol(Odata)-1,replace=T)
idxmat = matrix(nrow=nrow(Odata),ncol=ncol(Odata)-1)
for(i in 1:ncol(idxmat)){
idxmat[,i] = rbinom(n=nrow(idxmat),size=1,prob=prop[i])
}
head(idxmat)
for(i in 1:(ncol(Odata)-1)){
w = which(idxmat[,i]== 1)
Odata[w,i] = NA
}
head(Odata)
## Got the missing data
## Missing Percentage
round((colMeans(is.na(Odata)))*100,4)
sapply(Odata,class)
for(i in 1:ncol(Odata)){
c = class(Odata[,i])
if(c == "numeric"){
Odata[is.na(Odata[,i]),i] = mean(Odata[,i],na.rm = T)
}else
if(c == "integer"){
Odata[is.na(Odata[,i]),i] = median(Odata[,i],na.rm = T)
}
}
plot(density(Auto$mpg),lwd=2,col=2)
plot(density(Odata$mpg),lwd=2,col=2)
plot(density(Auto$mpg),lwd=2,col=2)
lines(density(Odata$mpg),lwd=2,col=3)
colnames(Odata[,1])
col(Odata[,1])
colnames(Odata[1])
Auto[,2]
i=1
c = class(Odata[,i])
c
if(c == "numeric"){
plot(Odata[,i],lwd=2,col=i,main="Density Plot",xlab=colnames(Odata[i]))
lines(Auto[,i],lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = i)
}else
if(c == "integer"){
barplot(Odata[,i],lwd=2,col=i,main="Bar Plot",xlab=colnames(Odata[i]))
lines(Auto[,i],lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = i)
}
for(i in 1:(ncol(Odata)-1)){
c = class(Odata[,i])
if(c == "numeric"){
plot(Odata[,i],lwd=2,col=i,main="Density Plot",xlab=colnames(Odata[i]))
lines(Auto[,i],lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = c(i,i+10))
}
if(c == "integer"){
barplot(Odata[,i],lwd=2,col=i,main="Bar Plot",xlab=colnames(Odata[i]))
lines(Auto[,i],lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = i)
}
}
i=1
c = class(Odata[,i])
if(c == "numeric"){
plot(density(Odata[,i]),lwd=2,col=i,main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = c(i,i+10))
}
if(c == "integer"){
barplot(Odata[,i],lwd=2,col=i,main="Bar Plot",xlab=colnames(Odata[i]))
lines(Auto[,i],lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = i)
}
c = class(Odata[,i])
if(c == "numeric"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#00CED1")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#00CED1"))
}
if(c == "integer"){
barplot(Odata[,i],lwd=2,col=i,main="Bar Plot",xlab=colnames(Odata[i]))
lines(Auto[,i],lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = i)
}
c = class(Odata[,i])
if(c == "numeric"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#4B0082")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#4B0082"))
}
if(c == "integer"){
barplot(Odata[,i],lwd=2,col=i,main="Bar Plot",xlab=colnames(Odata[i]))
lines(Auto[,i],lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = i)
}
c = class(Odata[,i])
if(c == "numeric"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
}
if(c == "integer"){
barplot(Odata[,i],lwd=2,col=i,main="Bar Plot",xlab=colnames(Odata[i]))
lines(Auto[,i],lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = i)
}
i=5
c = class(Odata[,i])
if(c == "numeric"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
}
if(c == "integer"){
barplot(Odata[,i],lwd=2,col=i,main="Bar Plot",xlab=colnames(Odata[i]))
lines(Auto[,i],lwd=2,col=(i+10))
legend("topright",legend=c("Imputed","Original"),fill = i)
}
i=2
b1 = Odata[,i]
b2 = Auto[,i]
b1
b2
mat = as.matrix(c(b1,b2))
mat
mat = as.matrix(cbind(b1,b2))
mat
b1 = Odata[,i]
b2 = Auto[,i]
mat = as.matrix(cbind(b1,b2))
barplot(mat,beside=T,main="Bar Plot",xlab=colnames(Odata[i]),ylab="Count")
for(i in 1:(ncol(Odata)-1)){
c = class(Odata[,i])
if(c == "numeric"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
}
}
colnames(Odata)
for(i in 1:(ncol(Odata)-1)){
c = colnames(Odata[i])
if(c != "cylinders" || c != "origin"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
}
}
c
c != "cylinders" || c != "origin"
for(i in 1:(ncol(Odata)-1)){
c = colnames(Odata[i])
if(c != "cylinders" && c != "origin"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
}
}
for(i in 1:(ncol(Odata)-1)){
c = colnames(Odata[i])
if(c != "cylinders" && c != "origin" && c != "displacement"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
}
}
plot(density(Odata$displacement),lwd=2,col="#1E90FF",main="Density Plot",xlab="displacement")
lines(density(Auto$displacement),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
plot(density(Auto$displacement),lwd=2,col="#FF1493",main="Density Plot",xlab="displacement")
lines(density(Odata$displacement),lwd=2,col="#1E90FF")
legend("topright",legend=c("Imputed","Original"),fill = c("#FF1493","#1E90FF"))
for(i in 1:(ncol(Odata)-1)){
c = colnames(Odata[i])
if(c != "cylinders" && c != "origin" && c != "displacement"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
}
}
plot(density(Auto$displacement),lwd=2,col="#FF1493",main="Density Plot",xlab="displacement")
lines(density(Odata$displacement),lwd=2,col="#1E90FF")
legend("topright",legend=c("Original","Imputed"),fill = c("#FF1493","#1E90FF"))
round((colMeans(is.na(Odata)))*100,4)
barplot(Odata$cylinders)
table(Odata$cylinders)
barplot(weight=Odata$cylinders)
barplot(height=Odata$cylinders)
barplot(Odata$cylinders,beside=T)
barplot(Odata$cylinders,horiz=T)
barplot(Odata$cylinders)
barplot(height=Odata$cylinders)
Odata$cylinders = as.factor(Odata$cylinders)
barplot(height=Odata$cylinders)
Odata$cylinders = as.integer(Odata$cylinders)
barplot(height=Odata$cylinders)
table(Odata$origin)
barplot(height=Odata$origin)
barplot(table(Odata$origin))
barplot(table(Odata$origin),col="#69b3a2")
barplot(table(Odata$origin),col="#69b3a2",ylim=c(0,300))
barplot(table(Odata$cylinders))
barplot(table(Odata$cylinders),ylim=c(0.250))
barplot(table(Odata$cylinders),ylim=c(0,250))
t = table(Odata$origin)
t
t = as.data.frame(table(Odata$origin))
t
t = as.matrix(table(Odata$origin))
t
t = as.data.frame(table(Odata$origin))
barplot(table(Odata$cylinders),ylim=c(0,250),col=rgb(0.2,0.4,0.6,0.6))
barplot(table(Odata$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6))
barplot(table(Auto$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6))
barplot(table(Auto$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6))
barplot(table(Odata$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6))
barplot(table(Auto$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6))
barplot(table(Odata$cylinders,Auto$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6))
barplot(table(Odata$cylinders,Auto$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6),beside = T)
table(Odata$cylinders,Auto$cylinders)
barplot(table(Odata$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6),beside = T)
barplot(table(Odata$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6))
barplot(table(Auto$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6))
barplot(table(Odata$cylinders),ylim=c(0,250),col=col="#69b3a2")
barplot(table(Odata$cylinders),ylim=c(0,250),col="#69b3a2")
par(mfrow=c(1,2))
barplot(table(Auto$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6))
barplot(table(Odata$cylinders),ylim=c(0,250),col="#69b3a2")
legend(legend("topright",legend=c("Original","Imputed"),fill = c(rgb(0.8,0.1,0.1,0.6),"#69b3a2")))
legend("topright",legend=c("Original","Imputed"),fill = c(rgb(0.8,0.1,0.1,0.6),"#69b3a2"))
table(Auto$cylinders)
table(Odata$cylinders)
"numeric"=="integer"
"numeric"=="numeric"
"integer"=="integer"
"integer"=="numeric"
c
median(Auto$cylinders)
mean(Auto$cylinders)
library(ISLR)
Odata = Auto
head(Odata)
sapply(Odata,class)
Odata$cylinders = as.integer(Odata$cylinders)
Odata$origin = as.integer(Odata$origin)
sapply(Odata,class)
set.seed(23325)
pr = seq(0.1,0.25,by=0.01)
prop = sample(pr,size = ncol(Odata)-1,replace=T)
idxmat = matrix(nrow=nrow(Odata),ncol=ncol(Odata)-1)
for(i in 1:ncol(idxmat)){
idxmat[,i] = rbinom(n=nrow(idxmat),size=1,prob=prop[i])
}
head(idxmat)
for(i in 1:(ncol(Odata)-1)){
w = which(idxmat[,i]== 1)
Odata[w,i] = NA
}
head(Odata)
round((colMeans(is.na(Odata)))*100,4)
sapply(Odata,class)
mean(Odata[,2],na.rm = T)
median(Odata[,2],na.rm = T)
i=2
Idata = Odata
Idata
for(i in 1:ncol(Odata)){
c = class(Odata[,i])
if(c == "numeric"){
Idata[is.na(Idata[,i]),i] = mean(Odata[,i],na.rm = T)
}else if(c == "integer"){
Idata[is.na(Idata[,i]),i] = median(Odata[,i],na.rm = T)
}
}
head(Idata)
median(Idata$cylinders)
barplot(table(Idata$cylinders))
barplot(table(Auto$cylinders))
barplot(table(Idata$cylinders))
barplot(table(Auto$cylinders))
barplot(table(Auto$origin))
barplot(table(Idata$origin))
for(i in 1:(ncol(Odata)-1)){
c = colnames(Odata[i])
if(c != "cylinders" && c != "origin" && c != "displacement"){
plot(density(Odata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Odata[i]))
lines(density(Auto[,i]),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
}
}
par(mfrow=c(1,2))
barplot(table(Auto$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6),xlab = "Cylinders")
barplot(table(Idata$cylinders),ylim=c(0,250),col="#69b3a2",xlab = "No. of Cylinders")
legend("topright",legend=c("Original","Imputed"),fill = c(rgb(0.8,0.1,0.1,0.6),"#69b3a2"))
barplot(table(Idata$origin),col="#69b3a2",ylim=c(0,300))
par(mfrow=c(1,2))
barplot(table(Auto$origin),ylim=c(0,300),col=rgb(0.8,0.1,0.1,0.6),xlab = "Origin")
barplot(table(Idata$origin),col="#69b3a2",ylim=c(0,300),xlab = "Origin")
legend("topright",legend=c("Original","Imputed"),fill = c(rgb(0.8,0.1,0.1,0.6),"#69b3a2"))
table(Auto$origin)
table(Idata$origin)
plot(Auto$mpg,Auto$horsepower)
plot(Idata$mpg,Idata$horsepower)
plot(Auto$weight,Auto$acceleration)
plot(Idata$weight,Idata$acceleration)
plot(Auto$horsepower,Auto$acceleration)
plot(Idata$horsepower,Idata$acceleration)
plot(Auto$mpg,Auto$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=17,col="#DAA520")
plot(Auto$mpg,Auto$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=16,col="#DAA520")
plot(Auto$mpg,Auto$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=16,col="#DAA520")
plot(Auto$mpg,Auto$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=16,col="#FF6347")
plot(Auto$mpg,Auto$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=16,col="#FF6347")
plot(Idata$mpg,Idata$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=16,col="#FFD700")
legend("bottomleft",legend=c("Original","Imputed"),fill = c("#FF6347","#FFD700"))
plot(Auto$mpg,Auto$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=16,col="#FF6347")
plot(Idata$mpg,Idata$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=16,col="#FFD700")
legend("topright",legend=c("Original","Imputed"),fill = c("#FF6347","#FFD700"))
plot(Auto$acceleration,Auto$horsepower,main="Scatter Plot",xlab="acceleration",ylab="horsepower",pch=16,col="#FF6347")
plot(Auto$acceleration,Idata$horsepower,main="Scatter Plot",xlab="acceleration",ylab="horsepower",pch=16,col="#FFD700")
legend("topright",legend=c("Original","Imputed"),fill = c("#FF6347","#FFD700"))
plot(Auto$horsepower,Auto$acceleration,main="Scatter Plot",xlab="acceleration",ylab="horsepower",pch=16,col="#FF6347")
plot(Idata$horsepower,Auto$acceleration,main="Scatter Plot",xlab="acceleration",ylab="horsepower",pch=16,col="#FFD700")
legend("topright",legend=c("Original","Imputed"),fill = c("#FF6347","#FFD700"))
plot(Auto$horsepower,Auto$acceleration,main="Scatter Plot",xlab="acceleration",ylab="horsepower",pch=16,col="#FF6347")
plot(Idata$horsepower,Auto$acceleration,main="Scatter Plot",xlab="acceleration",ylab="horsepower",pch=16,col="#FFD700")
legend("topright",legend=c("Original","Imputed"),fill = c("#FF6347","#FFD700"))
library(ISLR)
Odata = Auto
head(Odata)
sapply(Odata,class)
Odata$cylinders = as.integer(Odata$cylinders)
Odata$origin = as.integer(Odata$origin)
sapply(Odata,class)
set.seed(23325)
pr = seq(0.1,0.25,by=0.01)
prop = sample(pr,size = ncol(Odata)-1,replace=T)
idxmat = matrix(nrow=nrow(Odata),ncol=ncol(Odata)-1)
for(i in 1:ncol(idxmat)){
idxmat[,i] = rbinom(n=nrow(idxmat),size=1,prob=prop[i])
}
head(idxmat)
for(i in 1:(ncol(Odata)-1)){
w = which(idxmat[,i]== 1)
Odata[w,i] = NA
}
head(Odata)
prop
Idata = Odata
for(i in 1:ncol(Odata)){
c = class(Odata[,i])
if(c == "numeric"){
Idata[is.na(Idata[,i]),i] = mean(Odata[,i],na.rm = T)
}else if(c == "integer"){
Idata[is.na(Idata[,i]),i] = median(Odata[,i],na.rm = T)
}
}
for(i in 1:(ncol(Idata)-1)){
c = colnames(Idata[i])
if(c != "cylinders" && c != "origin" && c != "displacement"){
plot(density(Idata[,i]),lwd=2,col="#1E90FF",main="Density Plot",xlab=colnames(Idata[i]))
lines(density(Auto[,i]),lwd=2,col="#FF1493")
legend("topright",legend=c("Imputed","Original"),fill = c("#1E90FF","#FF1493"))
}
}
plot(density(Auto$displacement),lwd=2,col="#FF1493",main="Density Plot",xlab="displacement")
lines(density(Idata$displacement),lwd=2,col="#1E90FF")
legend("topright",legend=c("Original","Imputed"),fill = c("#FF1493","#1E90FF"))
par(mfrow=c(1,2))
barplot(table(Auto$cylinders),ylim=c(0,250),col=rgb(0.8,0.1,0.1,0.6),xlab = "No. of Cylinders")
barplot(table(Idata$cylinders),ylim=c(0,250),col="#69b3a2",xlab = "No. of Cylinders")
legend("topright",legend=c("Original","Imputed"),fill = c(rgb(0.8,0.1,0.1,0.6),"#69b3a2"))
barplot(table(Auto$origin),ylim=c(0,300),col=rgb(0.8,0.1,0.1,0.6),xlab = "Origin")
barplot(table(Idata$origin),col="#69b3a2",ylim=c(0,300),xlab = "Origin")
legend("topright",legend=c("Original","Imputed"),fill = c(rgb(0.8,0.1,0.1,0.6),"#69b3a2"))
plot(Auto$mpg,Auto$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=16,col="#FF6347")
plot(Idata$mpg,Idata$horsepower,main="Scatter Plot",xlab="mpg",ylab="horsepower",pch=16,col="#FFD700")
legend("topright",legend=c("Original","Imputed"),fill = c("#FF6347","#FFD700"))
plot(Auto$horsepower,Auto$acceleration,main="Scatter Plot",xlab="acceleration",ylab="horsepower",pch=16,col="#FF6347")
plot(Idata$horsepower,Auto$acceleration,main="Scatter Plot",xlab="acceleration",ylab="horsepower",pch=16,col="#FFD700")
legend("topright",legend=c("Original","Imputed"),fill = c("#FF6347","#FFD700"))
